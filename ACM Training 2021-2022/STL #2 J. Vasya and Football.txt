/*
       ____            ___________
      /\   \          |
     /  \   \         |
    /    \   \        |___________
   /______\   \                  |
  /        \   \                 |
 /          \  /       __________|
/            \/

 ___  ___              F
|\  \|\   \            F
\ \  \_\   \           F
 \ \ ___    \          F
  \  \ \\ \  \         F
   \  \__\\ \_\        F
    \ |__| \|__|       F

 */
#include<iostream>
#include<string>
#include<algorithm>
#include<cmath>
#include <cstring>
#include <functional>
#include<unordered_map>
#include <sstream>
#include<map>
#include<set>
#include <iomanip>
#include<vector>
#include<valarray>
#include<queue>
#define ll long long
#define fast ios_base::sync_with_stdio(0); cin.tie(0);  cout.tie(0);
//#include<bits/stdc++.h>
using namespace std;
#define REPi(a,b) for (int i = a; i <= b; i++)
#define REPj(a,b) for (int j = a; j <= b; j++)
#define genMod(x,Mod) (x<0)?(x % Mod + Mod) : (x % Mod)
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define all(v) v.begin(),v.end()
#define sz(v) (int) v.size()
ll REMINDER = 1000000007;
/*
int n, m;
char grid[1001][1001];
int vis[1001][1001];
int di[] = {0, 0, 1, 1, 1, -1, -1, -1};
int dj[] = {1, -1, 0, 1, -1, 0, 1, -1};
 */
struct Interval {
    int start, end;
};
bool compareInterval(Interval i1, Interval i2)
{
    return (i1.start < i2.start);
}
void solve() {
//ll n,i=0,j=0,cnt=0;
string home ,away;
cin>>home>>away;
ll t; cin>>t;
    set<ll> a1;
    set <ll> a2;
    map<ll, char> d1;
    map<ll, char> d2;
    ll min , num; char place,col ;
    while(t--) {
        cin >> min >> place >> num >> col;
        if (place == 'h') {
            if ((col == 'r' || a1.count(num) ) && !( d1.count(num)))
            {
                cout <<home << " " << num << " " << min << endl;
                d1.emplace(num,col);
            }
            a1.emplace(num);
        } else if (place == 'a') {
            if ((col == 'r' || a2.count(num) ) &&!( d2.count(num)))
            {
                cout << away << " " << num << " " << min << endl;
                d2.emplace(num, col );
            }
            a2.emplace(num);
        }
    }


}
int main()
{
    fast; // ashf gamed tenen
    //freopen("window.in", "r", stdin);   // for file reading

    ll test_case=1 ; //cin >> test_case;
    while (test_case--)
    {
        solve();

    }

    return 0;
}
