/*
       ____            ___________
      /\   \          |
     /  \   \         |
    /    \   \        |___________
   /______\   \                  |
  /        \   \                 |
 /          \  /       __________|
/            \/

 ___  ___              F
|\  \|\   \            F
\ \  \_\   \           F
 \ \ ___    \          F
  \  \ \\ \  \         F
   \  \__\\ \_\        F
    \ |__| \|__|       F

 */
#include<iostream>
#include<string>
#include<algorithm>
#include<cmath>
#include <cstring>
#include <functional>
#include<unordered_map>
#include <sstream>
#include<map>
#include<set>
#include <iomanip>
#include<vector>
#include<valarray>
#include<deque>
#define ll long long
#define fast ios_base::sync_with_stdio(0); cin.tie(0);  cout.tie(0);
//#include<bits/stdc++.h>
using namespace std;
#define REPi(a,b) for (int i = a; i <= b; i++)
#define REPj(a,b) for (int j = a; j <= b; j++)
#define genMod(x,Mod) (x<0)?(x % Mod + Mod) : (x % Mod)
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define all(v) v.begin(),v.end()
#define sz(v) (int) v.size()
ll REMINDER = 1000000007;
bool isPrime(int num){
    bool flag=true;
    for(int i = 2; i <= num / 2; i++) {
        if(num % i == 0) {
            flag = false;
            break;
        }
    }
    return flag;
}
void solve() {
   ll n,i = 0, j = 0,cnt = 0;
cin>>n;  bool flag=0;
    for(i=0;i<=(n / 1234567) + 1;i++) {
        for (j = 0; j<=(n / 123456) + 1; j++) {
            ll  kc= n- (1234567*i+123456*j);
            if(kc<0)
                break;
            double k= kc/(double)1234 ;
            if(k==int(k)){
                flag=1;
                break;
            }
        }
    }
if(flag)
    cout<<"YES";
else
    cout<<"NO";

}
int main()
{
    fast; // ashf gamed tenen
    //freopen("window.in", "r", stdin);   // for file reading

    ll test_case=1 ; //cin >> test_case;
    while (test_case--)
    {
        solve();

    }

    return 0;
}
