/*
       ____            ___________
      /\   \          |
     /  \   \         |
    /    \   \        |___________
   /______\   \                  |
  /        \   \                 |
 /          \  /       __________|
/            \/

 ___  ___              F
|\  \|\   \            F
\ \  \_\   \           F
 \ \ ___    \          F
  \  \ \\ \  \         F
   \  \__\\ \_\        F
    \ |__| \|__|       F

 */
#include<iostream>
#include<string>
#include<algorithm>
#include<cmath>
#include <cstring>
#include <functional>
#include<unordered_map>
#include <sstream>
#include<map>
#include<set>
#include <iomanip>
#include<vector>
#include<valarray>
#include<deque>
#define ll unsigned long long
#define fast ios_base::sync_with_stdio(0); cin.tie(0);  cout.tie(0);
//#include<bits/stdc++.h>
using namespace std;
#define REPi(a,b) for (int i = a; i <= b; i++)
#define REPj(a,b) for (int j = a; j <= b; j++)
#define genMod(x,Mod) (x<0)?(x % Mod + Mod) : (x % Mod)
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define all(v) v.begin(),v.end()
#define sz(v) (int) v.size()
ll REMINDER = 1000000007;
void solve() {
    ll n,m,i,j;
    cin>>n>>m;
    vector<pair<string, string >> x(m);
    vector<pair<ll, ll >> len(m);
    vector<string> text(n);
 string a ,b;
 for(i=0;i<m;i++){
     cin>>a>>b;
   len[i].first=a.size(); len[i].second=b.size();
x[i].first=a; x[i].second=b;
 }

for(i=0;i<n;i++){
    cin>>a;
    for(j=0;j<m;j++){
        if(a==x[j].first){
            if(len[j].first>len[j].second)
                cout<<x[j].second<<" ";
            else if(len[j].first<len[j].second)
                cout<<x[j].first<<" ";
            else
                cout<<x[j].first<<" ";
        }
    }
}

}
int main()
{
    fast; // ashf gamed tenen
    //freopen("window.in", "r", stdin);   // for file reading

    ll test_case=1 ; //cin >> test_case;
    while (test_case--)
    {
        solve();

    }

    return 0;
}
