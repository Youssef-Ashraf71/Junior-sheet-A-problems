
#include<iostream>
#include<string>
#include<algorithm>
#include<cmath>
#include <cstring>
#include <functional>
#include<unordered_map>
#include <sstream>
#include<map>
#include<set>
#include <iomanip>
#include<vector>
#include<valarray>
#include<deque>
#define ll   long long
#define fast ios_base::sync_with_stdio(0); cin.tie(0);  cout.tie(0);
//#include<bits/stdc++.h>
using namespace std;
#define REPi(a,b) for (int i = a; i <= b; i++)
#define REPj(a,b) for (int j = a; j <= b; j++)
#define genMod(x,Mod) (x<0)?(x % Mod + Mod) : (x % Mod)
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define all(v) v.begin(),v.end()
#define sortit(name) sort(name.begin(),name.end())
#define sz(v) (int) v.size()
ll REMINDER = 1000000007;
int countSubstring(const string& str, string& sub)
{
    if (sub.length() == 0) return 0;
    int count = 0;
    for (size_t offset = str.find(sub); offset != std::string::npos;
         offset = str.find(sub, offset + sub.length()))
    {
        ++count;
    }
    return count;
}

void solve() {
    ll n, i = 0, j = 0, cnt = 0;
    string s;
    cin>>s;
    string s1,s2;
    s1="ab";
    s2="ba";
    ll occ1= countSubstring(s,s1);
    ll occ2= countSubstring(s,s2);
//cout<<occ1<<occ2;
    if(occ1==occ2){
        cout<<s<<endl;
    }
    else if(occ1>occ2) {
        ll diff=occ1-occ2;
            for (i = 0; i < s.size() - 1 && diff!=0; i++) {
                if (s[i] == 'a') {
                    s[i] = 'b';
                 diff--;
                }
            }
        cout<<s<<endl;
        return;
    }
    else if (occ2>occ1){
        ll diff=occ2-occ1;
            for (i = 0; i < s.size() - 1 && diff!=0 ; i++) {
                if (s[i] == 'b') {
                    s[i] = 'a';
                   diff--;
                }
            }
        cout<<s<<endl;
        return;
    }

}

int main()
{
    fast; // ashf gamed tenen
    //freopen("window.in", "r", stdin);   // for file reading

    ll test_case=1 ; cin >> test_case;
    while (test_case--)
    {
        solve();

    }

    return 0;
}