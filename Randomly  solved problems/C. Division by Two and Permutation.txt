/*
       ____            ___________
      /\   \          |
     /  \   \         |
    /    \   \        |___________
   /______\   \                  |
  /        \   \                 |
 /          \  /       __________|
/            \/

 ___  ___              F
|\  \|\   \            F
\ \  \_\   \           F
 \ \ ___    \          F
  \  \ \\ \  \         F
   \  \__\\ \_\        F
    \ |__| \|__|       F

 */
#include <bits/stdc++.h>
#include <unordered_map>
#include<unordered_set>
#define ll long long
#define fast ios_base::sync_with_stdio(0); cin.tie(0);  cout.tie(0);
using namespace std;
#define REPi(a,b) for (int i = a; i <= b; i++)
#define REPj(a,b) for (int j = a; j <= b; j++)
#define genMod(x,Mod) (x<0)?(x % Mod + Mod) : (x % Mod)
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define all(v) v.begin(),v.end()
#define sz(v) (int) v.size()
const int N = 1e6 + 50,NN = 105, mod = 1e9 + 7;
ll REMINDER = 1000000007;
/*
int n, m;
char grid[1001][1001];
int vis[1001][1001];
1
int di[] = {0, 0, 1, 1, 1, -1, -1, -1};
int dj[] = {1, -1, 0, 1, -1, 0, 1, -1};
*/
void solve() {
    ll n,m ,i,j,cnt=0;
    cin>>n;
    vector<ll>x(n);
    for(i=0;i<n;i++){
        cin>>x[i];
    }
     sort(x.begin(),x.end());
    vector<bool>fail(n + 1, false);
    for ( i = 0; i < n; i++)
    {
        if (x[i] <= n)
        {
            if (fail[x[i]] == false)
                fail[x[i]] = true;
            else
            {
                while (x[i] && fail[x[i]] == true)
                {
                    x[i] /= 2;
                }
                fail[x[i]] = true;
            }
        }
        else {
            while (x[i] > n)
            {
                x[i] /= 2;
            }
            if (fail[x[i]] == false)
                fail[x[i]] = true;
            else
            {
                while (x[i] && fail[x[i]] == true)
                {
                    x[i] /= 2;
                }
                fail[x[i]] = true;
            }
        }
    }
    /*6
    4
    1 8 25 2
    2
    1 1
    9
    9 8 3 4 2 7 1 5 6
    3
    8 2 1
    4
    24 7 16 7
    5
    22 6 22 4 22
*/
    bool flag=1;
    for (i = 1; i <= n; i++)
    {
      if(fail[i]==0){
          flag=0;
          break;
      }
    }
    if(flag)
cout<<"YES"<<endl;
    else
        cout<<"NO"<<endl;
}
int main()
{
    fast; // ashf gamed tenen
    //freopen("window.in", "r", stdin);   // for file reading
    ll test_case=1 ;cin >> test_case;
    while (test_case--)
    {
        solve();
    }
    return 0;
}
