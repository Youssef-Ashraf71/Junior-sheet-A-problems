/*
       ____            ___________
      /\   \          |
     /  \   \         |
    /    \   \        |___________
   /______\   \                  |
  /        \   \                 |
 /          \  /       __________|
/            \/

 ___  ___              F
|\  \|\   \            F
\ \  \_\   \           F
 \ \ ___    \          F
  \  \ \\ \  \         F
   \  \__\\ \_\        F
    \ |__| \|__|       F

 */
#include<iostream>
#include<string>
#include<algorithm>
#include<cmath>
#include <cstring>
#include <functional>
#include<unordered_map>
#include <sstream>
#include<map>
#include<set>
#include <iomanip>
#include<vector>
#include<valarray>
#include<queue>
#include <sstream>
#define ll long long
#define ASHF ios_base::sync_with_stdio(0); cin.tie(0);  cout.tie(0);
//#include<bits/stdc++.h>
using namespace std;
#define REPi(a,b) for (int i = a; i <= b; i++)
#define REPj(a,b) for (int j = a; j <= b; j++)
#define genMod(x,Mod) (x<0)?(x % Mod + Mod) : (x % Mod)
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define all(v) v.begin(),v.end()
#define sz(v) (int) v.size()
ll REMINDER = 1000000007;
/*
int n, m;
char grid[1001][1001];
int vis[1001][1001];
1
int di[] = {0, 0, 1, 1, 1, -1, -1, -1};
int dj[] = {1, -1, 0, 1, -1, 0, 1, -1};
*/
ll dig(char a){
    int b = a-'0';
    return b;
}


int main()
{
    ASHF; // ashf gamed tenen
    //freopen("window.in", "r", stdin);   // for file reading

    ll test_case=1 ;cin >> test_case;
    while (test_case--)
    {
        string a,s;
        cin>>a>>s;
        ll lena=a.size();
        ll lens=s.size();
        ll idxa=lena-1;
        ll idxs=lens-1;
        string b;
        bool flag=1;
        while(idxa>=0 && idxs>=0) {
            ll vala = a[idxa] - '0';
            ll vals = s[idxs] - '0';
            if (vala <= vals) {
                ll minus = vals - vala;
                b.PB((char) ('0' + minus));
                idxa--;
                idxs--;
            } else {
                idxs--;
                vals += (10 * ((ll) (s[idxs] - '0')));
                ll minus = vals - vala;
                if (minus > 9 || minus < 0) {
                    flag = 0;
                    break;
                }
                b.PB((char) ('0' + minus));
                idxa--;
                idxs--;
            }
        }
        if(!flag) {
            cout << -1 << endl;
            continue;
        }
        if(idxa>=0){
            flag=0;
        }
        if(!flag) {
            cout << -1 << endl;
            continue;
        }
        while(idxs>=0){
            b.PB(s[idxs--]);
        }
        while(b.back()=='0'){
            b.pop_back();
        }
        reverse(b.begin(),b.end());
        cout<<b<<endl;

    }

    return 0;
}
