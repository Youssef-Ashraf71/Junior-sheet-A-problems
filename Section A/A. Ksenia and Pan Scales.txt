/*
       ____            ___________
      /\   \          |
     /  \   \         |
    /    \   \        |___________
   /______\   \                  |
  /        \   \                 |
 /          \  /       __________|
/            \/

 ___  ___              F
|\  \|\   \            F
\ \  \_\   \           F
 \ \ ___    \          F
  \  \ \\ \  \         F
   \  \__\\ \_\        F
    \ |__| \|__|       F

 */
#include<iostream>
#include<string>
#include<algorithm>
#include<cmath>
#include <cstring>
#include <functional>
#include<unordered_map>
#include <sstream>
#include<map>
#include<set>
#include <iomanip>
#include<vector>
#include<valarray>
#include<queue>
#define ll long long
#define el endl;
#define fast ios_base::sync_with_stdio(0); cin.tie(0);  cout.tie(0);
//#include<bits/stdc++.h>
using namespace std;
#define REPi(a,b) for (int i = a; i <= b; i++)
#define REPj(a,b) for (int j = a; j <= b; j++)
#define genMod(x,Mod) (x<0)?(x % Mod + Mod) : (x % Mod)
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define all(v) v.begin(),v.end()
#define sz(v) (int) v.size()
ll REMINDER = 1000000007;
/*
int n, m;
char grid[1001][1001];
int vis[1001][1001];

int di[] = {0, 0, 1, 1, 1, -1, -1, -1};
int dj[] = {1, -1, 0, 1, -1, 0, 1, -1};
*/
void solve() {
    ll n,k,i,j,cnt=0;
string s1,s2;string s,un;
    cin>>s; cin>>un;   s1="",s2="";    bool flag=1;
    for(i=0;i<s.size();i++){
        if(s[i]=='|') {
            flag = 0;  continue;
        }
        if(flag)
            s1+=s[i];
        else
            s2+=s[i];
    }

     if(s1.empty() && s2.empty()){
        if(un.size()%2==0){
            for(i=0;i<=un.size()/2-1;i++){
                cout<<un[i];
            }
            cout<<"|";
            for(i=un.size()/2;i<un.size();i++){
                cout<<un[i];
            }
        }
        else{
            cout<<"Impossible"<<endl;
        }
         return;
    }


if(s1.size()==s2.size()){
    if(un.size()%2==0){
        cout<<s1;
        for(i=0;i<=un.size()/2-1;i++){
            cout<<un[i];
        }
        cout<<"|";
        cout<<s2;
        for(i=un.size()/2;i<un.size();i++){
            cout<<un[i];
        }
    }
    else{
        cout<<"Impossible"<<endl;
    }
    return;
}
else if(s1.size()>s2.size()){
    if(s2.size()+un.size()>=s1.size()){
        i=0;
 while(s2.size()!=s1.size()){
     s2+=un[i];
     i++;
 }
 if((un.size()-i)%2==0){
     while(i!=un.size()){
         if(i%2==0){
             s1+=un[i];
             i++;
     }
         else{
             s2+=un[i];
             i++;
         }
     }
 }
 else{
     cout<<"Impossible"<<endl;
     return;
 }
    }
    else{
        cout<<"Impossible"<<endl;
        return;
    }
}
else{
    if(s1.size()+un.size()>=s2.size()){
        i=0;
        while(s2.size()!=s1.size()){
            s1+=un[i];
            i++;
        }
        if((un.size()-i)%2==0){
            while(i!=un.size()){
                if(i%2==0){
                    s1+=un[i];
                    i++;
                }
                else{
                    s2+=un[i];
                    i++;
                }
            }
        }else{
            cout<<"Impossible"<<endl;
            return;
        }
    }
    else{
        cout<<"Impossible"<<endl;
        return;
    }
}
cout<<s1<<"|"<<s2<<endl;
}
int main()
{
    fast; // ashf gamed tenen
    //freopen("window.in", "r", stdin);   // for file reading

    ll test_case=1 ; //cin >> test_case;
    while (test_case--)
    {
        solve();

    }

    return 0;
}
