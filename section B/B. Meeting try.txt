#include<iostream>
#include<string>
#include<algorithm>
#include<cmath>
#include <cstring>
#include <functional>
#include<unordered_map>
#include <sstream>
#include<map>
#include<set>
#include <iomanip>
#include<vector>
#include<valarray>
#define ll  long long
#define fast ios_base::sync_with_stdio(0); cin.tie(0);  cout.tie(0);
//#include<bits/stdc++.h>
using namespace std;
#define REPi(a,b) for (int i = a; i <= b; i++)
#define REPj(a,b) for (int j = a; j <= b; j++)
#define genMod(x,Mod) (x<0)?(x % Mod + Mod) : (x % Mod)
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define all(v) v.begin(),v.end()
#define sz(v) (int) v.size()
ll REMINDER = 1000000007;
double distant(double a, double b ,double c , double d){
    return sqrt(pow((llabs(c-a)),2)+pow(llabs((d-b)),2));
}
void solve() {
    ll n, i = 0, j = 0, k = 0, cnt = 0;
    double s1, s2, s3, s4;
    ll x[1000], y[1000];
    cin >> x[0] >> y[0] >> x[1] >> y[1];
    cin >> n;
    ll *r1 = new ll[n], *r2 = new ll[n], *r = new ll[n];
    for (i = 0; i < n; i++) {
        cin >> r1[i] >> r2[i] >> r[i];
    }
    x[2] = x[1];
    y[2] = y[0];
    x[3] = x[0];
    y[3] = y[1];
    ll len1 = (llabs(x[3] - x[1]) - 1), len2 = len1;
    ll wid1 = (llabs(y[0] - y[3]) - 1), wid2 = wid1;
    //  cout<<len1<<" "<<wid1<<endl;
    i = 4;
    j = 1;
    while (len1--) {
        x[i] = x[3] + j;
        y[i] = y[3];
        j++;
        i++;
    }
    j = 1;
    while (len2--) {
        x[i] = x[0] + j;
        y[i] = y[0];
        j++;
        i++;
    }
    j = 1;
    while (wid1--) {
        x[i] = x[3];
        y[i] = y[3] + j;
        j++;
        i++;
    }
    j = 1;
    while (wid2--) {
        x[i] = x[1];
        y[i] = y[1] + j;
        j++;
        i++;
    }
    ll sz = i;


  ll *test= new ll[sz];
    for (i = 0; i < sz; i++) {
        test[i] = 1;
    }
    double *s = new double[sz];
    for (j = 0; j < n; j++) {
        for (i = 0; i < sz; i++) {
            s[i] = distant(x[i], y[i], r1[j], r2[j]);
            if (s[i] <= r[j]) {
                test[i] = 0;
            }
        }
       // for (i = 0; i < sz; i++) {
        //    cout<<s[i]<<" "<< test[i]<<endl;
      //  }
        //cout<<endl;
    }
for(i=0;i<sz;i++){
   // cout<<test[i]<<endl;
    if(test[i]==1)
        cnt++;
}

cout<<cnt;
}







int main()
{
    fast; // ashf gamed tenen
    //freopen("window.in", "r", stdin);   // for file reading

    ll test_case=1 ;// cin >> test_case;
    while (test_case--)
    {
        solve();

    }

    return 0;
}
