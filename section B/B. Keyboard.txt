/*
       ____            ___________
      /\   \          |
     /  \   \         |
    /    \   \        |___________
   /______\   \                  |
  /        \   \                 |
 /          \  /       __________|
/            \/

 ___  ___              F
|\  \|\   \            F
\ \  \_\   \           F
 \ \ ___    \          F
  \  \ \\ \  \         F
   \  \__\\ \_\        F
    \ |__| \|__|       F

 */
#include<iostream>
#include<string>
#include<algorithm>
#include<cmath>
#include <cstring>
#include <functional>
#include<unordered_map>
#include <sstream>
#include<map>
#include<set>
#include <iomanip>
#include<vector>
#include<valarray>
#include<queue>
#define ll long long
#define ASHF ios_base::sync_with_stdio(0); cin.tie(0);  cout.tie(0);
//#include<bits/stdc++.h>
using namespace std;
#define REPi(a,b) for (int i = a; i <= b; i++)
#define REPj(a,b) for (int j = a; j <= b; j++)
#define genMod(x,Mod) (x<0)?(x % Mod + Mod) : (x % Mod)
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define all(v) v.begin(),v.end()
#define sz(v) (int) v.size()
ll REMINDER = 1000000007;
/*
int n, m;
char grid[1001][1001];
int vis[1001][1001];
1
int di[] = {0, 0, 1, 1, 1, -1, -1, -1};
int dj[] = {1, -1, 0, 1, -1, 0, 1, -1};
*/
double Dist(double x1,double y1,double x2,double y2){
    return  sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
}
void solve() {
    ll x, n, m, i, j, len, k, cnt = 0;
    cin >> n >> m >> x;
    vector<vector<char>> mama(n);
    vector<pair<ll, ll>> lol;
    map<char, double> visit;
    for (i = 0; i < n; i++) {
        mama[i] = vector<char>(m);
    }
 //   bool flag = 0;
    for (i = 0; i < n; i++) {
        for (j = 0; j < m; j++) {
            cin >> mama[i][j];
        //    if (mama[i][j] == 'S')
          //      flag = 1;
            if (mama[i][j] == 'S') {
                lol.emplace_back(i, j);
            }
        }
    }
    for (i = 0; i < n; i++) {
        for (j = 0; j < m; j++) {
            double minn = INT_MAX;
            if (mama[i][j] == 'S')
                continue;
            for (auto it : lol) {
                double d = Dist(i, j, it.first, it.second);
                minn = min(minn, d);
            }
            if (visit[mama[i][j]] == 0)
                visit[mama[i][j]] = INT_MAX;
            visit[mama[i][j]] = min(visit[mama[i][j]], minn);
        }
    }
    cin >> len;
    while (len--) {
        char c1, c2;
        cin >> c1;
        c2 = tolower(c1);
        if (!visit[c2]) {    // if the letter isnt found in the keyboard
            cout << -1;
            return;
        }
        if (isupper(c1)) {
            if (!sz(lol)) { // if no shift found in the keyboard
                cout << -1;
                return;
            }
            if (visit[c2] >x) // if >x he will use then other hand lmao ashffff gameddddd teeneeennnn
                cnt++;
        }
    }
cout<<cnt;

}
int main()
{
    ASHF; // ashf gamed tenen
    //freopen("window.in", "r", stdin);   // for file reading

    ll test_case=1 ;// cin >> test_case;
    while (test_case--)
    {
        solve();

    }

    return 0;
}
